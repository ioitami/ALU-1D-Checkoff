/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module alu_check_ans_3 (
    input [15:0] ans,
    input [5:0] alufn,
    input [1:0] id,
    input [0:0] v,
    output reg [1:0] checkans
  );
  
  
  
  localparam ADD = 6'h00;
  
  localparam SUB = 6'h01;
  
  localparam CMPEQ = 6'h33;
  
  localparam TESTCASE1 = 2'h0;
  
  localparam TEST1ADD = 16'h0036;
  
  localparam TEST1SUB = 16'h0000;
  
  localparam TEST1EQ = 1'h1;
  
  localparam TESTCASE2 = 2'h1;
  
  localparam TEST2ADD = 17'h0c000;
  
  localparam TEST2SUB = 16'h3ffe;
  
  localparam TEST2EQ = 1'h0;
  
  localparam TESTCASE3 = 2'h2;
  
  localparam TEST3ADD = 32'hffff0001;
  
  localparam TEST3SUB = 16'hffff;
  
  localparam TEST3EQ = 1'h0;
  
  localparam CORRECT = 2'h3;
  
  localparam WRONG = 2'h1;
  
  reg [1:0] z;
  
  always @* begin
    if (id == 2'h0) begin
      if (alufn == 6'h00) begin
        if (ans == 16'h0036 && v == 1'h0) begin
          z = 2'h3;
        end else begin
          z = 2'h1;
        end
      end
      if (alufn == 6'h01 && v == 1'h0) begin
        if (ans == 16'h0000) begin
          z = 2'h3;
        end else begin
          z = 2'h1;
        end
      end
      if (alufn == 6'h33 && v == 1'h0) begin
        if (ans == 1'h1) begin
          z = 2'h3;
        end else begin
          z = 2'h1;
        end
      end
    end
    if (id == 2'h1) begin
      if (alufn == 6'h00) begin
        if (ans == 17'h0c000 && v == 1'h0) begin
          z = 2'h3;
        end else begin
          z = 2'h1;
        end
      end
      if (alufn == 6'h01) begin
        if (ans == 16'h3ffe && v == 1'h0) begin
          z = 2'h3;
        end else begin
          z = 2'h1;
        end
      end
      if (alufn == 6'h33) begin
        if (ans == 1'h0 && v == 1'h0) begin
          z = 2'h3;
        end else begin
          z = 2'h1;
        end
      end
    end
    if (id == 2'h2) begin
      if (alufn == 6'h00) begin
        if (ans == 32'hffff0001 && v == 1'h0) begin
          z = 2'h3;
        end else begin
          z = 2'h1;
        end
      end
      if (alufn == 6'h01) begin
        if (ans == 16'hffff && v == 1'h0) begin
          z = 2'h3;
        end else begin
          z = 2'h1;
        end
      end
      if (alufn == 6'h33) begin
        if (ans == 1'h0 && v == 1'h0) begin
          z = 2'h3;
        end else begin
          z = 2'h1;
        end
      end
    end
    checkans = z;
  end
endmodule
